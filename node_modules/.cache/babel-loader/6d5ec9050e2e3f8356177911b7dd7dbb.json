{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    products: [],\n    quantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            state.products[i].quantity += action.payload.quantity;\n            state.totalPrice += action.payload.price * action.payload.quantity;\n            return;\n          }\n        }\n\n        state.quantity += 1;\n        state.products.push(action.payload);\n        state.totalPrice += action.payload.price * action.payload.quantity;\n      } else {\n        state.quantity += 1;\n        state.products.push(action.payload);\n        state.totalPrice += action.payload.price * action.payload.quantity;\n      }\n    },\n    increaseProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            if (state.products[i].quantity < 10000) {\n              state.products[i].quantity += 100;\n              state.totalPrice += action.payload.price * 100;\n            }\n\n            return;\n          }\n        }\n      }\n    },\n    decreaseProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            if (state.products[i].quantity > 100) {\n              state.products[i].quantity -= 100;\n              state.totalPrice -= action.payload.price * 100;\n            }\n\n            return;\n          }\n        }\n      }\n    }\n  }\n});\nexport const {\n  addProduct,\n  increaseProduct,\n  decreaseProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","totalPrice","reducers","addProduct","state","action","length","i","payload","_id","color","price","push","increaseProduct","decreaseProduct","actions","reducer"],"sources":["D:/Work/vinogradnik/client/src/redux/cartRedux.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        products: [],\r\n        quantity: 0,\r\n        totalPrice: 0\r\n    },\r\n    reducers: {\r\n        addProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        state.products[i].quantity += action.payload.quantity;\r\n                        state.totalPrice += action.payload.price * action.payload.quantity;\r\n                        return\r\n                    } \r\n                }\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);\r\n                state.totalPrice += action.payload.price * action.payload.quantity;               \r\n            } else {\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);\r\n                state.totalPrice += action.payload.price * action.payload.quantity;\r\n            }\r\n        },\r\n        increaseProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        if (state.products[i].quantity < 10000) {\r\n                            state.products[i].quantity += 100;\r\n                            state.totalPrice += action.payload.price * 100;\r\n                        }\r\n                        return                        \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        decreaseProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        if (state.products[i].quantity > 100) {\r\n                            state.products[i].quantity -= 100;\r\n                            state.totalPrice -= action.payload.price * 100;\r\n                        }\r\n                        return                        \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addProduct, increaseProduct, decreaseProduct } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}