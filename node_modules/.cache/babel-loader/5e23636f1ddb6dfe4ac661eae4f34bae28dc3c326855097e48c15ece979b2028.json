{"ast":null,"code":"import _defineProperty from \"D:/Work/vinogradnik/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"D:/Work/vinogradnik/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nvar _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport cssVarsParser from './cssVarsParser';\nimport ThemeProvider from '../ThemeProvider';\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  var _options$theme = options.theme,\n    defaultTheme = _options$theme === void 0 ? {} : _options$theme,\n    _options$attribute = options.attribute,\n    defaultAttribute = _options$attribute === void 0 ? DEFAULT_ATTRIBUTE : _options$attribute,\n    _options$modeStorageK = options.modeStorageKey,\n    defaultModeStorageKey = _options$modeStorageK === void 0 ? DEFAULT_MODE_STORAGE_KEY : _options$modeStorageK,\n    _options$colorSchemeS = options.colorSchemeStorageKey,\n    defaultColorSchemeStorageKey = _options$colorSchemeS === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _options$colorSchemeS,\n    _options$defaultMode = options.defaultMode,\n    desisgnSystemMode = _options$defaultMode === void 0 ? 'light' : _options$defaultMode,\n    designSystemColorScheme = options.defaultColorScheme,\n    _options$disableTrans = options.disableTransitionOnChange,\n    designSystemTransitionOnChange = _options$disableTrans === void 0 ? false : _options$disableTrans,\n    _options$enableColorS = options.enableColorScheme,\n    designSystemEnableColorScheme = _options$enableColorS === void 0 ? true : _options$enableColorS,\n    designSystemShouldSkipGeneratingVar = options.shouldSkipGeneratingVar,\n    resolveTheme = options.resolveTheme;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(\"MUI: `\".concat(designSystemColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n  }\n  var ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  var useColorScheme = function useColorScheme() {\n    var value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: `useColorScheme` must be called under <CssVarsProvider />\" : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(_ref) {\n    var children = _ref.children,\n      _ref$theme = _ref.theme,\n      themeProp = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      _ref$modeStorageKey = _ref.modeStorageKey,\n      modeStorageKey = _ref$modeStorageKey === void 0 ? defaultModeStorageKey : _ref$modeStorageKey,\n      _ref$colorSchemeStora = _ref.colorSchemeStorageKey,\n      colorSchemeStorageKey = _ref$colorSchemeStora === void 0 ? defaultColorSchemeStorageKey : _ref$colorSchemeStora,\n      _ref$attribute = _ref.attribute,\n      attribute = _ref$attribute === void 0 ? defaultAttribute : _ref$attribute,\n      _ref$defaultMode = _ref.defaultMode,\n      defaultMode = _ref$defaultMode === void 0 ? desisgnSystemMode : _ref$defaultMode,\n      _ref$defaultColorSche = _ref.defaultColorScheme,\n      defaultColorScheme = _ref$defaultColorSche === void 0 ? designSystemColorScheme : _ref$defaultColorSche,\n      _ref$disableTransitio = _ref.disableTransitionOnChange,\n      disableTransitionOnChange = _ref$disableTransitio === void 0 ? designSystemTransitionOnChange : _ref$disableTransitio,\n      _ref$enableColorSchem = _ref.enableColorScheme,\n      enableColorScheme = _ref$enableColorSchem === void 0 ? designSystemEnableColorScheme : _ref$enableColorSchem,\n      _ref$storageWindow = _ref.storageWindow,\n      storageWindow = _ref$storageWindow === void 0 ? typeof window === 'undefined' ? undefined : window : _ref$storageWindow,\n      _ref$documentNode = _ref.documentNode,\n      documentNode = _ref$documentNode === void 0 ? typeof document === 'undefined' ? undefined : document : _ref$documentNode,\n      _ref$colorSchemeNode = _ref.colorSchemeNode,\n      colorSchemeNode = _ref$colorSchemeNode === void 0 ? typeof document === 'undefined' ? undefined : document.documentElement : _ref$colorSchemeNode,\n      _ref$colorSchemeSelec = _ref.colorSchemeSelector,\n      colorSchemeSelector = _ref$colorSchemeSelec === void 0 ? ':root' : _ref$colorSchemeSelec,\n      _ref$shouldSkipGenera = _ref.shouldSkipGeneratingVar,\n      shouldSkipGeneratingVar = _ref$shouldSkipGenera === void 0 ? designSystemShouldSkipGeneratingVar : _ref$shouldSkipGenera;\n    var hasMounted = React.useRef(false);\n    var _themeProp$colorSchem = themeProp.colorSchemes,\n      colorSchemes = _themeProp$colorSchem === void 0 ? {} : _themeProp$colorSchem,\n      _themeProp$components = themeProp.components,\n      components = _themeProp$components === void 0 ? {} : _themeProp$components,\n      cssVarPrefix = themeProp.cssVarPrefix,\n      restThemeProp = _objectWithoutPropertiesLoose(themeProp, _excluded);\n    var allColorSchemes = Object.keys(colorSchemes);\n    var defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    var defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    var _useCurrentColorSchem = useCurrentColorScheme({\n        supportedColorSchemes: allColorSchemes,\n        defaultLightColorScheme: defaultLightColorScheme,\n        defaultDarkColorScheme: defaultDarkColorScheme,\n        modeStorageKey: modeStorageKey,\n        colorSchemeStorageKey: colorSchemeStorageKey,\n        defaultMode: defaultMode,\n        storageWindow: storageWindow\n      }),\n      mode = _useCurrentColorSchem.mode,\n      setMode = _useCurrentColorSchem.setMode,\n      systemMode = _useCurrentColorSchem.systemMode,\n      lightColorScheme = _useCurrentColorSchem.lightColorScheme,\n      darkColorScheme = _useCurrentColorSchem.darkColorScheme,\n      colorScheme = _useCurrentColorSchem.colorScheme,\n      setColorScheme = _useCurrentColorSchem.setColorScheme;\n    var resolvedColorScheme = function () {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    }();\n    var theme = restThemeProp;\n    var _cssVarsParser = cssVarsParser(theme, {\n        prefix: cssVarPrefix,\n        shouldSkipGeneratingVar: shouldSkipGeneratingVar\n      }),\n      rootCss = _cssVarsParser.css,\n      rootVars = _cssVarsParser.vars,\n      parsedTheme = _cssVarsParser.parsedTheme;\n    theme = _extends({}, parsedTheme, {\n      components: components,\n      colorSchemes: colorSchemes,\n      cssVarPrefix: cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: function getColorSchemeSelector(targetColorScheme) {\n        return \"[\".concat(attribute, \"=\\\"\").concat(targetColorScheme, \"\\\"] &\");\n      }\n    });\n    var defaultColorSchemeStyleSheet = {};\n    var otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        scheme = _ref3[1];\n      var _cssVarsParser2 = cssVarsParser(scheme, {\n          prefix: cssVarPrefix,\n          shouldSkipGeneratingVar: shouldSkipGeneratingVar\n        }),\n        css = _cssVarsParser2.css,\n        vars = _cssVarsParser2.vars,\n        parsedScheme = _cssVarsParser2.parsedTheme;\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === resolvedColorScheme) {\n        theme = _extends({}, theme, parsedScheme);\n        if (theme.palette) {\n          // assign runtime mode & colorScheme\n          theme.palette.mode = mode;\n          theme.palette.colorScheme = resolvedColorScheme;\n        }\n      }\n      var resolvedDefaultColorScheme = function () {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      }();\n      if (key === resolvedDefaultColorScheme) {\n        defaultColorSchemeStyleSheet[\"\".concat(colorSchemeSelector, \", [\").concat(attribute, \"=\\\"\").concat(key, \"\\\"]\")] = css;\n      } else {\n        otherColorSchemesStyleSheet[\"\".concat(colorSchemeSelector === ':root' ? '' : colorSchemeSelector, \"[\").concat(attribute, \"=\\\"\").concat(key, \"\\\"]\")] = css;\n      }\n    });\n    React.useEffect(function () {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n    useEnhancedEffect(function () {\n      if (!mode || !enableColorScheme || !colorSchemeNode) {\n        return undefined;\n      }\n      var priorColorScheme = colorSchemeNode.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        colorSchemeNode.style.setProperty('color-scheme', systemMode);\n      } else {\n        colorSchemeNode.style.setProperty('color-scheme', mode);\n      }\n      return function () {\n        colorSchemeNode.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode, enableColorScheme, colorSchemeNode]);\n    React.useEffect(function () {\n      var timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        var css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (function () {\n          return window.getComputedStyle(documentNode.body);\n        })();\n        timer = setTimeout(function () {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return function () {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(function () {\n      hasMounted.current = true;\n      return function () {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/_jsxs(ColorSchemeContext.Provider, {\n      value: {\n        mode: mode,\n        setMode: setMode,\n        lightColorScheme: lightColorScheme,\n        darkColorScheme: darkColorScheme,\n        colorScheme: colorScheme,\n        setColorScheme: setColorScheme,\n        allColorSchemes: allColorSchemes\n      },\n      children: [/*#__PURE__*/_jsx(GlobalStyles, {\n        styles: _defineProperty({}, colorSchemeSelector, rootCss)\n      }), /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: defaultColorSchemeStyleSheet\n      }), /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: otherColorSchemesStyleSheet\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\r\n     * The body attribute name to attach colorScheme.\r\n     */\n    attribute: PropTypes.string,\n    /**\r\n     * The component tree.\r\n     */\n    children: PropTypes.node,\n    /**\r\n     * The node used to attach the color-scheme attribute\r\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\r\n     * The CSS selector for attaching the generated custom properties\r\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\r\n     * localStorage key used to store `colorScheme`\r\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\r\n     * The initial color scheme used.\r\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\r\n     * The initial mode used.\r\n     */\n    defaultMode: PropTypes.string,\n    /**\r\n     * Disable CSS transitions when switching between modes or color schemes\r\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\r\n     * The document to attach the attribute to\r\n     */\n    documentNode: PropTypes.any,\n    /**\r\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\r\n     */\n    enableColorScheme: PropTypes.bool,\n    /**\r\n     * The key in the local storage used to store current color scheme.\r\n     */\n    modeStorageKey: PropTypes.string,\n    /**\r\n     * A function to determine if the key, value should be attached as CSS Variable\r\n     */\n    shouldSkipGeneratingVar: PropTypes.func,\n    /**\r\n     * The window that attaches the 'storage' event listener\r\n     * @default window\r\n     */\n    storageWindow: PropTypes.any,\n    /**\r\n     * The calculated theme object that will be passed through context.\r\n     */\n    theme: PropTypes.object\n  } : void 0;\n  var getInitColorSchemeScript = function getInitColorSchemeScript(params) {\n    return systemGetInitColorSchemeScript(_extends({\n      attribute: defaultAttribute,\n      colorSchemeStorageKey: defaultColorSchemeStorageKey,\n      modeStorageKey: defaultModeStorageKey,\n      enableColorScheme: designSystemEnableColorScheme\n    }, params));\n  };\n  return {\n    CssVarsProvider: CssVarsProvider,\n    useColorScheme: useColorScheme,\n    getInitColorSchemeScript: getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","React","PropTypes","deepmerge","unstable_useEnhancedEffect","useEnhancedEffect","GlobalStyles","cssVarsParser","ThemeProvider","systemGetInitColorSchemeScript","DEFAULT_ATTRIBUTE","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_MODE_STORAGE_KEY","useCurrentColorScheme","jsx","_jsx","jsxs","_jsxs","DISABLE_CSS_TRANSITION","createCssVarsProvider","options","theme","defaultTheme","attribute","defaultAttribute","modeStorageKey","defaultModeStorageKey","colorSchemeStorageKey","defaultColorSchemeStorageKey","defaultMode","desisgnSystemMode","designSystemColorScheme","defaultColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","enableColorScheme","designSystemEnableColorScheme","designSystemShouldSkipGeneratingVar","shouldSkipGeneratingVar","resolveTheme","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","value","useContext","Error","process","env","NODE_ENV","CssVarsProvider","children","themeProp","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","hasMounted","useRef","components","cssVarPrefix","restThemeProp","allColorSchemes","Object","keys","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","mode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","setColorScheme","resolvedColorScheme","prefix","rootCss","css","rootVars","vars","parsedTheme","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","entries","forEach","key","scheme","parsedScheme","palette","resolvedDefaultColorScheme","useEffect","setAttribute","priorColorScheme","style","getPropertyValue","setProperty","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","Provider","styles","propTypes","string","node","any","oneOfType","object","bool","func","getInitColorSchemeScript","params"],"sources":["D:/Work/vinogradnik/client/node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\r\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deepmerge, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\r\nimport { GlobalStyles } from '@mui/styled-engine';\r\nimport cssVarsParser from './cssVarsParser';\r\nimport ThemeProvider from '../ThemeProvider';\r\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\r\nimport useCurrentColorScheme from './useCurrentColorScheme';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\r\nexport default function createCssVarsProvider(options) {\r\n  const {\r\n    theme: defaultTheme = {},\r\n    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,\r\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\r\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\r\n    defaultMode: desisgnSystemMode = 'light',\r\n    defaultColorScheme: designSystemColorScheme,\r\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\r\n    enableColorScheme: designSystemEnableColorScheme = true,\r\n    shouldSkipGeneratingVar: designSystemShouldSkipGeneratingVar,\r\n    resolveTheme\r\n  } = options;\r\n\r\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\r\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\r\n  }\r\n\r\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\r\n\r\n  const useColorScheme = () => {\r\n    const value = React.useContext(ColorSchemeContext);\r\n\r\n    if (!value) {\r\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  function CssVarsProvider({\r\n    children,\r\n    theme: themeProp = defaultTheme,\r\n    modeStorageKey = defaultModeStorageKey,\r\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\r\n    attribute = defaultAttribute,\r\n    defaultMode = desisgnSystemMode,\r\n    defaultColorScheme = designSystemColorScheme,\r\n    disableTransitionOnChange = designSystemTransitionOnChange,\r\n    enableColorScheme = designSystemEnableColorScheme,\r\n    storageWindow = typeof window === 'undefined' ? undefined : window,\r\n    documentNode = typeof document === 'undefined' ? undefined : document,\r\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\r\n    colorSchemeSelector = ':root',\r\n    shouldSkipGeneratingVar = designSystemShouldSkipGeneratingVar\r\n  }) {\r\n    const hasMounted = React.useRef(false);\r\n\r\n    const {\r\n      colorSchemes = {},\r\n      components = {},\r\n      cssVarPrefix\r\n    } = themeProp,\r\n          restThemeProp = _objectWithoutPropertiesLoose(themeProp, _excluded);\r\n\r\n    const allColorSchemes = Object.keys(colorSchemes);\r\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\r\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\r\n    const {\r\n      mode,\r\n      setMode,\r\n      systemMode,\r\n      lightColorScheme,\r\n      darkColorScheme,\r\n      colorScheme,\r\n      setColorScheme\r\n    } = useCurrentColorScheme({\r\n      supportedColorSchemes: allColorSchemes,\r\n      defaultLightColorScheme,\r\n      defaultDarkColorScheme,\r\n      modeStorageKey,\r\n      colorSchemeStorageKey,\r\n      defaultMode,\r\n      storageWindow\r\n    });\r\n\r\n    const resolvedColorScheme = (() => {\r\n      if (!colorScheme) {\r\n        // This scope occurs on the server\r\n        if (defaultMode === 'dark') {\r\n          return defaultDarkColorScheme;\r\n        } // use light color scheme, if default mode is 'light' | 'auto'\r\n\r\n\r\n        return defaultLightColorScheme;\r\n      }\r\n\r\n      return colorScheme;\r\n    })();\r\n\r\n    let theme = restThemeProp;\r\n    const {\r\n      css: rootCss,\r\n      vars: rootVars,\r\n      parsedTheme\r\n    } = cssVarsParser(theme, {\r\n      prefix: cssVarPrefix,\r\n      shouldSkipGeneratingVar\r\n    });\r\n    theme = _extends({}, parsedTheme, {\r\n      components,\r\n      colorSchemes,\r\n      cssVarPrefix,\r\n      vars: rootVars,\r\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\r\n    });\r\n    const defaultColorSchemeStyleSheet = {};\r\n    const otherColorSchemesStyleSheet = {};\r\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\r\n      const {\r\n        css,\r\n        vars,\r\n        parsedTheme: parsedScheme\r\n      } = cssVarsParser(scheme, {\r\n        prefix: cssVarPrefix,\r\n        shouldSkipGeneratingVar\r\n      });\r\n      theme.vars = deepmerge(theme.vars, vars);\r\n\r\n      if (key === resolvedColorScheme) {\r\n        theme = _extends({}, theme, parsedScheme);\r\n\r\n        if (theme.palette) {\r\n          // assign runtime mode & colorScheme\r\n          theme.palette.mode = mode;\r\n          theme.palette.colorScheme = resolvedColorScheme;\r\n        }\r\n      }\r\n\r\n      const resolvedDefaultColorScheme = (() => {\r\n        if (typeof defaultColorScheme === 'string') {\r\n          return defaultColorScheme;\r\n        }\r\n\r\n        if (defaultMode === 'dark') {\r\n          return defaultColorScheme.dark;\r\n        }\r\n\r\n        return defaultColorScheme.light;\r\n      })();\r\n\r\n      if (key === resolvedDefaultColorScheme) {\r\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\r\n      } else {\r\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\r\n      }\r\n    });\r\n    React.useEffect(() => {\r\n      if (colorScheme && colorSchemeNode) {\r\n        // attaches attribute to <html> because the css variables are attached to :root (html)\r\n        colorSchemeNode.setAttribute(attribute, colorScheme);\r\n      }\r\n    }, [colorScheme, attribute, colorSchemeNode]);\r\n    useEnhancedEffect(() => {\r\n      if (!mode || !enableColorScheme || !colorSchemeNode) {\r\n        return undefined;\r\n      }\r\n\r\n      const priorColorScheme = colorSchemeNode.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\r\n\r\n      if (mode === 'system') {\r\n        colorSchemeNode.style.setProperty('color-scheme', systemMode);\r\n      } else {\r\n        colorSchemeNode.style.setProperty('color-scheme', mode);\r\n      }\r\n\r\n      return () => {\r\n        colorSchemeNode.style.setProperty('color-scheme', priorColorScheme);\r\n      };\r\n    }, [mode, systemMode, enableColorScheme, colorSchemeNode]);\r\n    React.useEffect(() => {\r\n      let timer;\r\n\r\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\r\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\r\n        const css = documentNode.createElement('style');\r\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\r\n        documentNode.head.appendChild(css); // Force browser repaint\r\n\r\n        (() => window.getComputedStyle(documentNode.body))();\r\n\r\n        timer = setTimeout(() => {\r\n          documentNode.head.removeChild(css);\r\n        }, 1);\r\n      }\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\r\n    React.useEffect(() => {\r\n      hasMounted.current = true;\r\n      return () => {\r\n        hasMounted.current = false;\r\n      };\r\n    }, []);\r\n    return /*#__PURE__*/_jsxs(ColorSchemeContext.Provider, {\r\n      value: {\r\n        mode,\r\n        setMode,\r\n        lightColorScheme,\r\n        darkColorScheme,\r\n        colorScheme,\r\n        setColorScheme,\r\n        allColorSchemes\r\n      },\r\n      children: [/*#__PURE__*/_jsx(GlobalStyles, {\r\n        styles: {\r\n          [colorSchemeSelector]: rootCss\r\n        }\r\n      }), /*#__PURE__*/_jsx(GlobalStyles, {\r\n        styles: defaultColorSchemeStyleSheet\r\n      }), /*#__PURE__*/_jsx(GlobalStyles, {\r\n        styles: otherColorSchemesStyleSheet\r\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\r\n        theme: resolveTheme ? resolveTheme(theme) : theme,\r\n        children: children\r\n      })]\r\n    });\r\n  }\r\n\r\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\r\n    /**\r\n     * The body attribute name to attach colorScheme.\r\n     */\r\n    attribute: PropTypes.string,\r\n\r\n    /**\r\n     * The component tree.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The node used to attach the color-scheme attribute\r\n     */\r\n    colorSchemeNode: PropTypes.any,\r\n\r\n    /**\r\n     * The CSS selector for attaching the generated custom properties\r\n     */\r\n    colorSchemeSelector: PropTypes.string,\r\n\r\n    /**\r\n     * localStorage key used to store `colorScheme`\r\n     */\r\n    colorSchemeStorageKey: PropTypes.string,\r\n\r\n    /**\r\n     * The initial color scheme used.\r\n     */\r\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n\r\n    /**\r\n     * The initial mode used.\r\n     */\r\n    defaultMode: PropTypes.string,\r\n\r\n    /**\r\n     * Disable CSS transitions when switching between modes or color schemes\r\n     */\r\n    disableTransitionOnChange: PropTypes.bool,\r\n\r\n    /**\r\n     * The document to attach the attribute to\r\n     */\r\n    documentNode: PropTypes.any,\r\n\r\n    /**\r\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\r\n     */\r\n    enableColorScheme: PropTypes.bool,\r\n\r\n    /**\r\n     * The key in the local storage used to store current color scheme.\r\n     */\r\n    modeStorageKey: PropTypes.string,\r\n\r\n    /**\r\n     * A function to determine if the key, value should be attached as CSS Variable\r\n     */\r\n    shouldSkipGeneratingVar: PropTypes.func,\r\n\r\n    /**\r\n     * The window that attaches the 'storage' event listener\r\n     * @default window\r\n     */\r\n    storageWindow: PropTypes.any,\r\n\r\n    /**\r\n     * The calculated theme object that will be passed through context.\r\n     */\r\n    theme: PropTypes.object\r\n  } : void 0;\r\n\r\n  const getInitColorSchemeScript = params => systemGetInitColorSchemeScript(_extends({\r\n    attribute: defaultAttribute,\r\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\r\n    modeStorageKey: defaultModeStorageKey,\r\n    enableColorScheme: designSystemEnableColorScheme\r\n  }, params));\r\n\r\n  return {\r\n    CssVarsProvider,\r\n    useColorScheme,\r\n    getInitColorSchemeScript\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}