{"ast":null,"code":"'use strict';\n\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * This library has been refactored to use the newly created localized-strings package so to\n * unify the code and make it easier to mantain\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/react-localization\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _localizedStrings = require('localized-strings');\nvar _localizedStrings2 = _interopRequireDefault(_localizedStrings);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\n/**\n * Format the passed string replacing the numbered or tokenized placeholders\n * eg. 1: I'd like some {0} and {1}, or just {0}\n * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n * Use example:\n * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n *\n * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n*/\n_localizedStrings2.default.prototype.formatString = function (str) {\n  for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    valuesForPlaceholders[_key - 1] = arguments[_key];\n  }\n  var hasObject = false;\n  var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n    return !!textPart;\n  }).map(function (textPart, index) {\n    if (textPart.match(placeholderRegex)) {\n      var matchedKey = textPart.slice(1, -1);\n      var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n\n      // If no value found, check if working with an object instead\n      if (valueForPlaceholder == undefined) {\n        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n        if (valueFromObjectPlaceholder !== undefined) {\n          valueForPlaceholder = valueFromObjectPlaceholder;\n        } else {\n          // If value still isn't found, then it must have been undefined/null\n          return valueForPlaceholder;\n        }\n      }\n      if (_react2.default.isValidElement(valueForPlaceholder)) {\n        hasObject = true;\n        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n          return _extends({}, component, {\n            key: index.toString()\n          });\n        });\n      }\n      return valueForPlaceholder;\n    }\n    return textPart;\n  });\n  // If the results contains a object return an array otherwise return a string\n  if (hasObject) return res;\n  return res.join('');\n};\nexports.default = _localizedStrings2.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_localizedStrings","_localizedStrings2","obj","__esModule","default","placeholderRegex","formatString","str","_len","valuesForPlaceholders","Array","_key","hasObject","res","split","filter","textPart","map","index","match","matchedKey","slice","valueForPlaceholder","undefined","valueFromObjectPlaceholder","isValidElement","Children","toArray","component","toString","join"],"sources":["D:/Work/vinogradnik/client/node_modules/react-localization/lib/LocalizedStrings.js"],"sourcesContent":["'use strict';\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * This library has been refactored to use the newly created localized-strings package so to\n * unify the code and make it easier to mantain\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/react-localization\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _localizedStrings = require('localized-strings');\n\nvar _localizedStrings2 = _interopRequireDefault(_localizedStrings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\n/**\n * Format the passed string replacing the numbered or tokenized placeholders\n * eg. 1: I'd like some {0} and {1}, or just {0}\n * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n * Use example:\n * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n *\n * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n*/\n_localizedStrings2.default.prototype.formatString = function (str) {\n  for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    valuesForPlaceholders[_key - 1] = arguments[_key];\n  }\n\n  var hasObject = false;\n  var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n    return !!textPart;\n  }).map(function (textPart, index) {\n    if (textPart.match(placeholderRegex)) {\n      var matchedKey = textPart.slice(1, -1);\n      var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n\n      // If no value found, check if working with an object instead\n      if (valueForPlaceholder == undefined) {\n        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n        if (valueFromObjectPlaceholder !== undefined) {\n          valueForPlaceholder = valueFromObjectPlaceholder;\n        } else {\n          // If value still isn't found, then it must have been undefined/null\n          return valueForPlaceholder;\n        }\n      }\n\n      if (_react2.default.isValidElement(valueForPlaceholder)) {\n        hasObject = true;\n        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n          return _extends({}, component, { key: index.toString() });\n        });\n      }\n\n      return valueForPlaceholder;\n    }\n    return textPart;\n  });\n  // If the results contains a object return an array otherwise return a string\n  if (hasObject) return res;\n  return res.join('');\n};\n\nexports.default = _localizedStrings2.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}