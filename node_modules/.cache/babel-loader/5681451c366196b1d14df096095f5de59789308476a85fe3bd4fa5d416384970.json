{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport jwtDecode from 'jwt-decode';\nimport { publicRequest } from '../requestMethods';\nimport { logout } from './apiCalls';\nexport const refreshAccessToken = createAsyncThunk('auth/refreshAccessToken', async (refreshToken, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  try {\n    const res = await publicRequest.post('auth/refresh_token', {\n      refreshToken\n    });\n    const {\n      accessToken\n    } = res.data;\n    return accessToken;\n  } catch (err) {\n    dispatch(logout());\n    throw err;\n  }\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    refreshTokenStart: state => {\n      state.isFetching = true;\n    },\n    refreshTokenSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser.accessToken = action.payload.accessToken;\n    },\n    refreshTokenFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    logoutStart: state => {\n      state.isFetching = true;\n    },\n    logoutSuccess: state => {\n      state.isFetching = false;\n      state.currentUser = null;\n      state.error = false;\n    },\n    logoutFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  refreshTokenStart,\n  refreshTokenSuccess,\n  refreshTokenFailure,\n  logoutStart,\n  logoutSuccess,\n  logoutFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","jwtDecode","publicRequest","logout","refreshAccessToken","refreshToken","dispatch","res","post","accessToken","data","err","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","refreshTokenStart","refreshTokenSuccess","refreshTokenFailure","logoutStart","logoutSuccess","logoutFailure","actions","reducer"],"sources":["D:/Work/vinogradnik/client/src/redux/userRedux.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { publicRequest } from '../requestMethods';\r\nimport { logout } from './apiCalls';\r\n\r\n\r\nexport const refreshAccessToken = createAsyncThunk('auth/refreshAccessToken', async (refreshToken, { dispatch }) => {\r\n    try {\r\n        const res = await publicRequest.post('auth/refresh_token', { refreshToken });\r\n        const { accessToken } = res.data;\r\n        return accessToken;\r\n    } catch(err) {\r\n        dispatch(logout());\r\n        throw err;\r\n    }\r\n})\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        currentUser: null,\r\n        isFetching: false,\r\n        error: false\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.isFetching = true\r\n            state.error = false\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload\r\n        },\r\n        loginFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        refreshTokenStart: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        refreshTokenSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser.accessToken = action.payload.accessToken;\r\n        },\r\n        refreshTokenFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        logoutStart: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        logoutSuccess: (state) => {\r\n            state.isFetching = false;\r\n            state.currentUser = null;\r\n            state.error = false;\r\n        },\r\n        logoutFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { \r\n    loginStart, \r\n    loginSuccess, \r\n    loginFailure, \r\n    refreshTokenStart,\r\n    refreshTokenSuccess,\r\n    refreshTokenFailure,\r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure \r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,MAAM,QAAQ,YAAY;AAGnC,OAAO,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAAC,yBAAyB,EAAE,OAAOK,YAAY,WAAmB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC3G,IAAI;IACA,MAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,oBAAoB,EAAE;MAAEH;IAAa,CAAC,CAAC;IAC5E,MAAM;MAAEI;IAAY,CAAC,GAAGF,GAAG,CAACG,IAAI;IAChC,OAAOD,WAAW;EACtB,CAAC,CAAC,OAAME,GAAG,EAAE;IACTL,QAAQ,CAACH,MAAM,EAAE,CAAC;IAClB,MAAMQ,GAAG;EACb;AACJ,CAAC,CAAC;AAGF,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC1Bc,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACJ,UAAU,GAAG,IAAI;MACvBI,KAAK,CAACH,KAAK,GAAG,KAAK;IACvB,CAAC;IACDI,YAAY,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACL,WAAW,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,YAAY,EAAGJ,KAAK,IAAK;MACrBA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC;IACDQ,iBAAiB,EAAGL,KAAK,IAAK;MAC1BA,KAAK,CAACJ,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDU,mBAAmB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACL,WAAW,CAACN,WAAW,GAAGa,MAAM,CAACC,OAAO,CAACd,WAAW;IAC9D,CAAC;IACDkB,mBAAmB,EAAGP,KAAK,IAAK;MAC5BA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC;IACDW,WAAW,EAAGR,KAAK,IAAK;MACpBA,KAAK,CAACJ,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDa,aAAa,EAAGT,KAAK,IAAK;MACtBA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACL,WAAW,GAAG,IAAI;MACxBK,KAAK,CAACH,KAAK,GAAG,KAAK;IACvB,CAAC;IACDa,aAAa,EAAGV,KAAK,IAAK;MACtBA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTE,UAAU;EACVE,YAAY;EACZG,YAAY;EACZC,iBAAiB;EACjBC,mBAAmB;EACnBC,mBAAmB;EACnBC,WAAW;EACXC,aAAa;EACbC;AACJ,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AACrB,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}