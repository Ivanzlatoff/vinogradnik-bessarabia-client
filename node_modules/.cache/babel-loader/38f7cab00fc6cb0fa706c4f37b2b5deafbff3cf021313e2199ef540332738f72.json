{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInterfaceLanguage = getInterfaceLanguage;\nexports.getBestMatchingLanguage = getBestMatchingLanguage;\nexports.validateTranslationKeys = validateTranslationKeys;\nexports.randomPseudo = randomPseudo;\n/**\n * Return the current interface language\n * If the navigator object is defined it returns the current navigator language\n * otherwise it falls back to 'en-US'\n * Works in browsers\n */\nfunction getInterfaceLanguage() {\n  var defaultLang = 'en-US';\n  if (typeof navigator === 'undefined') {\n    return defaultLang;\n  }\n  var nav = navigator; // eslint-disable-line no-undef\n  if (nav) {\n    if (nav.language) {\n      return nav.language;\n    }\n    if (!!nav.languages && !!nav.languages[0]) {\n      return nav.languages[0];\n    }\n    if (nav.userLanguage) {\n      return nav.userLanguage;\n    }\n    if (nav.browserLanguage) {\n      return nav.browserLanguage;\n    }\n  }\n  return defaultLang;\n}\n\n/**\n * Get the best match based on the language passed and the available languages\n * @param {*} language\n * @param {*} props\n */\nfunction getBestMatchingLanguage(language, props) {\n  // If an object with the passed language key exists return it\n  if (props[language]) return language;\n\n  // if the string is composed try to find a match with only the first language identifiers (en-US --> en)\n  var idx = language.indexOf('-');\n  var auxLang = idx >= 0 ? language.substring(0, idx) : language;\n  return props[auxLang] ? auxLang : Object.keys(props)[0];\n}\n\n/**\n * Check that the keys used in the provided strings object don't collide with existing property\n * already defined in the LocalizedStrings object\n * @param {*} translationKeys\n */\nfunction validateTranslationKeys(translationKeys) {\n  var reservedNames = ['_interfaceLanguage', '_language', '_defaultLanguage', '_defaultLanguageFirstLevelKeys', '_props'];\n  translationKeys.forEach(function (key) {\n    if (reservedNames.indexOf(key) !== -1) {\n      throw new Error(key + ' cannot be used as a key. It is a reserved word.');\n    }\n  });\n}\n\n/**\n * Get a random pseudo string back after specified a length\n * @param {Number} len - How many characters to get back\n */\nfunction randomPseudo(len) {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < len; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getInterfaceLanguage","getBestMatchingLanguage","validateTranslationKeys","randomPseudo","defaultLang","navigator","nav","language","languages","userLanguage","browserLanguage","props","idx","indexOf","auxLang","substring","keys","translationKeys","reservedNames","forEach","key","Error","len","text","possible","i","charAt","Math","floor","random","length"],"sources":["D:/Work/vinogradnik/client/node_modules/localized-strings/lib/utils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInterfaceLanguage = getInterfaceLanguage;\nexports.getBestMatchingLanguage = getBestMatchingLanguage;\nexports.validateTranslationKeys = validateTranslationKeys;\nexports.randomPseudo = randomPseudo;\n/**\n * Return the current interface language\n * If the navigator object is defined it returns the current navigator language\n * otherwise it falls back to 'en-US'\n * Works in browsers\n */\nfunction getInterfaceLanguage() {\n  var defaultLang = 'en-US';\n  if (typeof navigator === 'undefined') {\n    return defaultLang;\n  }\n  var nav = navigator; // eslint-disable-line no-undef\n  if (nav) {\n    if (nav.language) {\n      return nav.language;\n    }\n    if (!!nav.languages && !!nav.languages[0]) {\n      return nav.languages[0];\n    }\n    if (nav.userLanguage) {\n      return nav.userLanguage;\n    }\n    if (nav.browserLanguage) {\n      return nav.browserLanguage;\n    }\n  }\n  return defaultLang;\n}\n\n/**\n * Get the best match based on the language passed and the available languages\n * @param {*} language\n * @param {*} props\n */\nfunction getBestMatchingLanguage(language, props) {\n  // If an object with the passed language key exists return it\n  if (props[language]) return language;\n\n  // if the string is composed try to find a match with only the first language identifiers (en-US --> en)\n  var idx = language.indexOf('-');\n  var auxLang = idx >= 0 ? language.substring(0, idx) : language;\n  return props[auxLang] ? auxLang : Object.keys(props)[0];\n}\n\n/**\n * Check that the keys used in the provided strings object don't collide with existing property\n * already defined in the LocalizedStrings object\n * @param {*} translationKeys\n */\nfunction validateTranslationKeys(translationKeys) {\n  var reservedNames = ['_interfaceLanguage', '_language', '_defaultLanguage', '_defaultLanguageFirstLevelKeys', '_props'];\n  translationKeys.forEach(function (key) {\n    if (reservedNames.indexOf(key) !== -1) {\n      throw new Error(key + ' cannot be used as a key. It is a reserved word.');\n    }\n  });\n}\n\n/**\n * Get a random pseudo string back after specified a length\n * @param {Number} len - How many characters to get back\n */\nfunction randomPseudo(len) {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < len; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }return text;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB;AACnDF,OAAO,CAACG,uBAAuB,GAAGA,uBAAuB;AACzDH,OAAO,CAACI,uBAAuB,GAAGA,uBAAuB;AACzDJ,OAAO,CAACK,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,oBAAoB,GAAG;EAC9B,IAAII,WAAW,GAAG,OAAO;EACzB,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;IACpC,OAAOD,WAAW;EACpB;EACA,IAAIE,GAAG,GAAGD,SAAS,CAAC,CAAC;EACrB,IAAIC,GAAG,EAAE;IACP,IAAIA,GAAG,CAACC,QAAQ,EAAE;MAChB,OAAOD,GAAG,CAACC,QAAQ;IACrB;IACA,IAAI,CAAC,CAACD,GAAG,CAACE,SAAS,IAAI,CAAC,CAACF,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE;MACzC,OAAOF,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC;IACzB;IACA,IAAIF,GAAG,CAACG,YAAY,EAAE;MACpB,OAAOH,GAAG,CAACG,YAAY;IACzB;IACA,IAAIH,GAAG,CAACI,eAAe,EAAE;MACvB,OAAOJ,GAAG,CAACI,eAAe;IAC5B;EACF;EACA,OAAON,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASH,uBAAuB,CAACM,QAAQ,EAAEI,KAAK,EAAE;EAChD;EACA,IAAIA,KAAK,CAACJ,QAAQ,CAAC,EAAE,OAAOA,QAAQ;;EAEpC;EACA,IAAIK,GAAG,GAAGL,QAAQ,CAACM,OAAO,CAAC,GAAG,CAAC;EAC/B,IAAIC,OAAO,GAAGF,GAAG,IAAI,CAAC,GAAGL,QAAQ,CAACQ,SAAS,CAAC,CAAC,EAAEH,GAAG,CAAC,GAAGL,QAAQ;EAC9D,OAAOI,KAAK,CAACG,OAAO,CAAC,GAAGA,OAAO,GAAGlB,MAAM,CAACoB,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAST,uBAAuB,CAACe,eAAe,EAAE;EAChD,IAAIC,aAAa,GAAG,CAAC,oBAAoB,EAAE,WAAW,EAAE,kBAAkB,EAAE,gCAAgC,EAAE,QAAQ,CAAC;EACvHD,eAAe,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;IACrC,IAAIF,aAAa,CAACL,OAAO,CAACO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACrC,MAAM,IAAIC,KAAK,CAACD,GAAG,GAAG,kDAAkD,CAAC;IAC3E;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA,SAASjB,YAAY,CAACmB,GAAG,EAAE;EACzB,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,QAAQ,GAAG,gEAAgE;EAC/E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,IAAI,CAAC,EAAE;IAC/BF,IAAI,IAAIC,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGL,QAAQ,CAACM,MAAM,CAAC,CAAC;EACtE;EAAC,OAAOP,IAAI;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}