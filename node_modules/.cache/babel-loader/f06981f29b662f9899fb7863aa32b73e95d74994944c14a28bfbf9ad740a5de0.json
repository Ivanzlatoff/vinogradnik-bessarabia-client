{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethods\";\nimport { loginFailure, loginStart, loginSuccess, refreshTokenStart, refreshTokenSuccess, refreshTokenFailure, logoutStart, logoutSuccess, logoutFailure } from \"./userRedux\";\nimport { toast } from 'react-hot-toast';\nexport const refreshAccessToken = async (dispatch, refreshToken, refreshTokenId) => {\n  dispatch(refreshTokenStart());\n  try {\n    const res = await publicRequest.put(\"/auth/refresh_token\", {\n      refreshToken,\n      refreshTokenId\n    }, {\n      withCredentials: true\n    });\n    dispatch(refreshTokenSuccess(res.data));\n    return res.data;\n  } catch (err) {\n    dispatch(refreshTokenFailure());\n  }\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    const {\n      accessToken,\n      refreshToken,\n      refreshTokenId,\n      ...others\n    } = res.data;\n    dispatch(loginSuccess(others));\n  } catch (err) {\n    console.log(err);\n    dispatch(loginFailure());\n    toast.error(err.response.data.error);\n  }\n};\nexport const logout = async (dispatch, user) => {\n  dispatch(logoutStart());\n  const {\n    _id,\n    refreshTokenId\n  } = user;\n  try {\n    const res = await userRequest.post(\"/auth/logout_post\", {\n      userId: _id,\n      refreshTokenId\n    });\n    if (res) {\n      dispatch(logoutSuccess());\n      localStorage.clear();\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(logoutFailure());\n  }\n};","map":{"version":3,"names":["publicRequest","userRequest","loginFailure","loginStart","loginSuccess","refreshTokenStart","refreshTokenSuccess","refreshTokenFailure","logoutStart","logoutSuccess","logoutFailure","toast","refreshAccessToken","dispatch","refreshToken","refreshTokenId","res","put","withCredentials","data","err","login","user","post","accessToken","others","console","log","error","response","logout","_id","userId","localStorage","clear"],"sources":["D:/Work/vinogradnik/client/src/redux/apiCalls.js"],"sourcesContent":["import { publicRequest, userRequest } from \"../requestMethods\";\r\nimport { \r\n    loginFailure, \r\n    loginStart, \r\n    loginSuccess, \r\n    refreshTokenStart,\r\n    refreshTokenSuccess,\r\n    refreshTokenFailure,\r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure \r\n} from \"./userRedux\"\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport const refreshAccessToken = async (dispatch, refreshToken, refreshTokenId) => {\r\n\r\n    dispatch(refreshTokenStart());\r\n    try {\r\n        const res = await publicRequest.put(\"/auth/refresh_token\", {refreshToken, refreshTokenId}, { \r\n            withCredentials: true\r\n        });\r\n        dispatch(refreshTokenSuccess(res.data));\r\n        return res.data\r\n    } catch(err) {\r\n        dispatch(refreshTokenFailure());\r\n    }\r\n};\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user);\r\n        const { accessToken, refreshToken, refreshTokenId, ...others } = res.data;\r\n        dispatch(loginSuccess(others))\r\n    } catch(err) {\r\n        console.log(err)\r\n        dispatch(loginFailure());\r\n        toast.error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const logout = async (dispatch, user) => {\r\n    dispatch(logoutStart());\r\n    const { _id, refreshTokenId } = user;\r\n    try {\r\n        const res = await userRequest.post(\"/auth/logout_post\", {userId: _id, refreshTokenId});\r\n        if (res) {\r\n            dispatch(logoutSuccess());\r\n            localStorage.clear();\r\n        } \r\n    } catch(err) {\r\n        console.log(err);\r\n        dispatch(logoutFailure());\r\n    }\r\n};"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SACIC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,WAAW,EACXC,aAAa,EACbC,aAAa,QACV,aAAa;AACpB,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,KAAK;EAEhFF,QAAQ,CAACR,iBAAiB,EAAE,CAAC;EAC7B,IAAI;IACA,MAAMW,GAAG,GAAG,MAAMhB,aAAa,CAACiB,GAAG,CAAC,qBAAqB,EAAE;MAACH,YAAY;MAAEC;IAAc,CAAC,EAAE;MACvFG,eAAe,EAAE;IACrB,CAAC,CAAC;IACFL,QAAQ,CAACP,mBAAmB,CAACU,GAAG,CAACG,IAAI,CAAC,CAAC;IACvC,OAAOH,GAAG,CAACG,IAAI;EACnB,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACN,mBAAmB,EAAE,CAAC;EACnC;AACJ,CAAC;AAED,OAAO,MAAMc,KAAK,GAAG,OAAOR,QAAQ,EAAES,IAAI,KAAK;EAC3CT,QAAQ,CAACV,UAAU,EAAE,CAAC;EACtB,IAAI;IACA,MAAMa,GAAG,GAAG,MAAMhB,aAAa,CAACuB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACzD,MAAM;MAAEE,WAAW;MAAEV,YAAY;MAAEC,cAAc;MAAE,GAAGU;IAAO,CAAC,GAAGT,GAAG,CAACG,IAAI;IACzEN,QAAQ,CAACT,YAAY,CAACqB,MAAM,CAAC,CAAC;EAClC,CAAC,CAAC,OAAML,GAAG,EAAE;IACTM,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAChBP,QAAQ,CAACX,YAAY,EAAE,CAAC;IACxBS,KAAK,CAACiB,KAAK,CAACR,GAAG,CAACS,QAAQ,CAACV,IAAI,CAACS,KAAK,CAAC;EACxC;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,OAAOjB,QAAQ,EAAES,IAAI,KAAK;EAC5CT,QAAQ,CAACL,WAAW,EAAE,CAAC;EACvB,MAAM;IAAEuB,GAAG;IAAEhB;EAAe,CAAC,GAAGO,IAAI;EACpC,IAAI;IACA,MAAMN,GAAG,GAAG,MAAMf,WAAW,CAACsB,IAAI,CAAC,mBAAmB,EAAE;MAACS,MAAM,EAAED,GAAG;MAAEhB;IAAc,CAAC,CAAC;IACtF,IAAIC,GAAG,EAAE;MACLH,QAAQ,CAACJ,aAAa,EAAE,CAAC;MACzBwB,YAAY,CAACC,KAAK,EAAE;IACxB;EACJ,CAAC,CAAC,OAAMd,GAAG,EAAE;IACTM,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAChBP,QAAQ,CAACH,aAAa,EAAE,CAAC;EAC7B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}