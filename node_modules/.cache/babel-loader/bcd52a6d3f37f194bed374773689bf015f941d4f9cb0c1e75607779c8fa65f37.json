{"ast":null,"code":"import axios from \"axios\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { clearCart } from \"./cartRedux\";\nimport { loginFailure, loginStart, loginSuccess, logoutStart, logoutSuccess, logoutFailure } from \"./userRedux\";\nimport { clearWishlist } from \"./wishlistRedux\";\nexport const refreshToken = async (dispatch, user) => {\n  try {\n    const res = await axios.post(\"/refresh_token\", {\n      token: user.refreshToken\n    });\n    dispatch(refreshTokenSuccess(res.data));\n  } catch (err) {\n    dispatch(refreshTokenFailure());\n  }\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async (dispatch, user) => {\n  dispatch(logoutStart());\n  try {\n    const res = await userRequest.post(\"/auth/logout_post\", user);\n    dispatch(logoutSuccess(res));\n    dispatch(clearCart());\n    dispatch(clearWishlist());\n  } catch (err) {\n    console.log(err);\n    dispatch(logoutFailure());\n  }\n};","map":{"version":3,"names":["axios","publicRequest","userRequest","clearCart","loginFailure","loginStart","loginSuccess","logoutStart","logoutSuccess","logoutFailure","clearWishlist","refreshToken","dispatch","user","res","post","token","refreshTokenSuccess","data","err","refreshTokenFailure","login","logout","console","log"],"sources":["D:/Work/vinogradnik/client/src/redux/apiCalls.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\nimport { clearCart } from \"./cartRedux\";\r\nimport { \r\n    loginFailure, \r\n    loginStart, \r\n    loginSuccess, \r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure \r\n} from \"./userRedux\"\r\nimport { clearWishlist } from \"./wishlistRedux\";\r\n\r\nexport const refreshToken = async (dispatch, user) => {\r\n    try {\r\n        const res = await axios.post(\"/refresh_token\", { token: user.refreshToken });\r\n        dispatch(refreshTokenSuccess(res.data));\r\n    } catch(err) {\r\n        dispatch(refreshTokenFailure());\r\n    }\r\n};\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user)\r\n        dispatch(loginSuccess(res.data))\r\n    } catch(err) {\r\n        dispatch(loginFailure());\r\n    }\r\n};\r\n\r\nexport const logout = async (dispatch, user) => {\r\n    dispatch(logoutStart());\r\n    try {\r\n        const res = await userRequest.post(\"/auth/logout_post\", user);\r\n        dispatch(logoutSuccess(res));\r\n        dispatch(clearCart());\r\n        dispatch(clearWishlist());\r\n    } catch(err) {\r\n        console.log(err);\r\n        dispatch(logoutFailure());\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,SAAS,QAAQ,aAAa;AACvC,SACIC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,aAAa,QACV,aAAa;AACpB,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,IAAI,KAAK;EAClD,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,gBAAgB,EAAE;MAAEC,KAAK,EAAEH,IAAI,CAACF;IAAa,CAAC,CAAC;IAC5EC,QAAQ,CAACK,mBAAmB,CAACH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACQ,mBAAmB,EAAE,CAAC;EACnC;AACJ,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,OAAOT,QAAQ,EAAEC,IAAI,KAAK;EAC3CD,QAAQ,CAACP,UAAU,EAAE,CAAC;EACtB,IAAI;IACA,MAAMS,GAAG,GAAG,MAAMb,aAAa,CAACc,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACzDD,QAAQ,CAACN,YAAY,CAACQ,GAAG,CAACI,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACR,YAAY,EAAE,CAAC;EAC5B;AACJ,CAAC;AAED,OAAO,MAAMkB,MAAM,GAAG,OAAOV,QAAQ,EAAEC,IAAI,KAAK;EAC5CD,QAAQ,CAACL,WAAW,EAAE,CAAC;EACvB,IAAI;IACA,MAAMO,GAAG,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAAC,mBAAmB,EAAEF,IAAI,CAAC;IAC7DD,QAAQ,CAACJ,aAAa,CAACM,GAAG,CAAC,CAAC;IAC5BF,QAAQ,CAACT,SAAS,EAAE,CAAC;IACrBS,QAAQ,CAACF,aAAa,EAAE,CAAC;EAC7B,CAAC,CAAC,OAAMS,GAAG,EAAE;IACTI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAChBP,QAAQ,CAACH,aAAa,EAAE,CAAC;EAC7B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}