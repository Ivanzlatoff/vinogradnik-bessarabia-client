{"ast":null,"code":"import { clearRefreshToken, publicRequest, updateRefreshToken, userRequest } from \"../requestMethods\";\nimport { loginFailure, loginStart, loginSuccess, refreshTokenStart, refreshTokenSuccess, refreshTokenFailure, logoutStart, logoutSuccess, logoutFailure } from \"./userRedux\";\nimport { toast } from 'react-hot-toast';\nexport const refreshAccessToken = async (dispatch, refreshToken, refreshTokenId) => {\n  dispatch(refreshTokenStart());\n  try {\n    const res = await publicRequest.put(\"/auth/refresh_token\", {\n      refreshToken,\n      refreshTokenId\n    }, {\n      withCredentials: true\n    });\n    dispatch(refreshTokenSuccess(res.data));\n    return res.data;\n  } catch (err) {\n    dispatch(refreshTokenFailure());\n  }\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    const {\n      accessToken,\n      refreshToken,\n      refreshTokenId,\n      ...others\n    } = res.data;\n    dispatch(loginSuccess(others));\n    updateRefreshToken(refreshToken, refreshTokenId);\n  } catch (err) {\n    console.log(err);\n    dispatch(loginFailure());\n    toast.error(err.response.data.error);\n  }\n};\nexport const logout = async (dispatch, refreshTokenId) => {\n  dispatch(logoutStart());\n  try {\n    await userRequest.post(\"/auth/logout_post\", refreshTokenId);\n    dispatch(logoutSuccess());\n    clearRefreshToken();\n    delete userRequest.defaults.headers.common[\"token\"];\n  } catch (err) {\n    dispatch(logoutFailure());\n    console.log(err);\n  }\n};","map":{"version":3,"names":["clearRefreshToken","publicRequest","updateRefreshToken","userRequest","loginFailure","loginStart","loginSuccess","refreshTokenStart","refreshTokenSuccess","refreshTokenFailure","logoutStart","logoutSuccess","logoutFailure","toast","refreshAccessToken","dispatch","refreshToken","refreshTokenId","res","put","withCredentials","data","err","login","user","post","accessToken","others","console","log","error","response","logout","defaults","headers","common"],"sources":["D:/Work/vinogradnik/client/src/redux/apiCalls.js"],"sourcesContent":["import { clearRefreshToken, publicRequest, updateRefreshToken, userRequest } from \"../requestMethods\";\r\nimport { \r\n    loginFailure, \r\n    loginStart, \r\n    loginSuccess, \r\n    refreshTokenStart,\r\n    refreshTokenSuccess,\r\n    refreshTokenFailure,\r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure \r\n} from \"./userRedux\"\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport const refreshAccessToken = async (dispatch, refreshToken, refreshTokenId) => {\r\n\r\n    dispatch(refreshTokenStart());\r\n    try {\r\n        const res = await publicRequest.put(\"/auth/refresh_token\", {refreshToken, refreshTokenId}, { \r\n            withCredentials: true\r\n        });\r\n        dispatch(refreshTokenSuccess(res.data));\r\n        return res.data\r\n    } catch(err) {\r\n        dispatch(refreshTokenFailure());\r\n    }\r\n};\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user);\r\n        const { accessToken, refreshToken, refreshTokenId, ...others } = res.data;\r\n        dispatch(loginSuccess(others));\r\n        updateRefreshToken(refreshToken, refreshTokenId);\r\n    } catch(err) {\r\n        console.log(err)\r\n        dispatch(loginFailure());\r\n        toast.error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const logout = async (dispatch, refreshTokenId) => {\r\n    dispatch(logoutStart());\r\n    try {\r\n        await userRequest.post(\"/auth/logout_post\", refreshTokenId)\r\n        dispatch(logoutSuccess());\r\n        clearRefreshToken();\r\n        delete userRequest.defaults.headers.common[\"token\"];\r\n    } catch(err) {\r\n        dispatch(logoutFailure());\r\n        console.log(err);\r\n    }\r\n};"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,mBAAmB;AACrG,SACIC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,WAAW,EACXC,aAAa,EACbC,aAAa,QACV,aAAa;AACpB,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,KAAK;EAEhFF,QAAQ,CAACR,iBAAiB,EAAE,CAAC;EAC7B,IAAI;IACA,MAAMW,GAAG,GAAG,MAAMjB,aAAa,CAACkB,GAAG,CAAC,qBAAqB,EAAE;MAACH,YAAY;MAAEC;IAAc,CAAC,EAAE;MACvFG,eAAe,EAAE;IACrB,CAAC,CAAC;IACFL,QAAQ,CAACP,mBAAmB,CAACU,GAAG,CAACG,IAAI,CAAC,CAAC;IACvC,OAAOH,GAAG,CAACG,IAAI;EACnB,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACN,mBAAmB,EAAE,CAAC;EACnC;AACJ,CAAC;AAED,OAAO,MAAMc,KAAK,GAAG,OAAOR,QAAQ,EAAES,IAAI,KAAK;EAC3CT,QAAQ,CAACV,UAAU,EAAE,CAAC;EACtB,IAAI;IACA,MAAMa,GAAG,GAAG,MAAMjB,aAAa,CAACwB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACzD,MAAM;MAAEE,WAAW;MAAEV,YAAY;MAAEC,cAAc;MAAE,GAAGU;IAAO,CAAC,GAAGT,GAAG,CAACG,IAAI;IACzEN,QAAQ,CAACT,YAAY,CAACqB,MAAM,CAAC,CAAC;IAC9BzB,kBAAkB,CAACc,YAAY,EAAEC,cAAc,CAAC;EACpD,CAAC,CAAC,OAAMK,GAAG,EAAE;IACTM,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAChBP,QAAQ,CAACX,YAAY,EAAE,CAAC;IACxBS,KAAK,CAACiB,KAAK,CAACR,GAAG,CAACS,QAAQ,CAACV,IAAI,CAACS,KAAK,CAAC;EACxC;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,OAAOjB,QAAQ,EAAEE,cAAc,KAAK;EACtDF,QAAQ,CAACL,WAAW,EAAE,CAAC;EACvB,IAAI;IACA,MAAMP,WAAW,CAACsB,IAAI,CAAC,mBAAmB,EAAER,cAAc,CAAC;IAC3DF,QAAQ,CAACJ,aAAa,EAAE,CAAC;IACzBX,iBAAiB,EAAE;IACnB,OAAOG,WAAW,CAAC8B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC;EACvD,CAAC,CAAC,OAAMb,GAAG,EAAE;IACTP,QAAQ,CAACH,aAAa,EAAE,CAAC;IACzBgB,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}