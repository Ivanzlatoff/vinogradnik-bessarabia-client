{"ast":null,"code":"import axios from \"axios\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { clearCart, fetchCart } from \"./cartRedux\";\nimport { loginFailure, loginStart, loginSuccess, refreshTokenStart, refreshTokenSuccess, refreshTokenFailure, logoutStart, logoutSuccess, logoutFailure } from \"./userRedux\";\nimport { clearWishlist, fetchWishlist } from \"./wishlistRedux\";\nimport { toast } from 'react-hot-toast';\nexport const refreshToken = async dispatch => {\n  dispatch(refreshTokenStart());\n  try {\n    const res = await userRequest.get(\"/refresh_token\", {\n      withCredentials: true\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (err) {\n    dispatch(refreshTokenFailure());\n  }\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    console.log(res.data);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n    toast.error(err.response.data.error);\n  }\n};\nexport const logout = async (dispatch, user) => {\n  dispatch(logoutStart());\n  const {\n    _id,\n    refreshTokenId\n  } = user;\n  try {\n    const res = await userRequest.post(\"/auth/logout_post\", {\n      userId: _id,\n      refreshTokenId\n    });\n    if (res) {\n      dispatch(logoutSuccess());\n      dispatch(clearCart());\n      dispatch(clearWishlist());\n      localStorage.clear();\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch(logoutFailure());\n  }\n};","map":{"version":3,"names":["axios","publicRequest","userRequest","clearCart","fetchCart","loginFailure","loginStart","loginSuccess","refreshTokenStart","refreshTokenSuccess","refreshTokenFailure","logoutStart","logoutSuccess","logoutFailure","clearWishlist","fetchWishlist","toast","refreshToken","dispatch","res","get","withCredentials","console","log","data","err","login","user","post","error","response","logout","_id","refreshTokenId","userId","localStorage","clear"],"sources":["D:/Work/vinogradnik/client/src/redux/apiCalls.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\nimport { clearCart, fetchCart } from \"./cartRedux\";\r\nimport { \r\n    loginFailure, \r\n    loginStart, \r\n    loginSuccess, \r\n    refreshTokenStart,\r\n    refreshTokenSuccess,\r\n    refreshTokenFailure,\r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure \r\n} from \"./userRedux\"\r\nimport { clearWishlist, fetchWishlist } from \"./wishlistRedux\";\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport const refreshToken = async (dispatch) => {\r\n    dispatch(refreshTokenStart())\r\n    try {\r\n        const res = await userRequest.get(\"/refresh_token\", { \r\n            withCredentials: true\r\n        });\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch(err) {\r\n        dispatch(refreshTokenFailure());\r\n    }\r\n};\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user)\r\n        console.log(res.data)\r\n        dispatch(loginSuccess(res.data))\r\n    } catch(err) {\r\n        dispatch(loginFailure());\r\n        toast.error(err.response.data.error);\r\n    }\r\n};\r\n\r\nexport const logout = async (dispatch, user) => {\r\n    dispatch(logoutStart());\r\n    const { _id, refreshTokenId } = user;\r\n    try {\r\n        const res = await userRequest.post(\"/auth/logout_post\", {userId: _id, refreshTokenId});\r\n        if (res) {\r\n            dispatch(logoutSuccess());\r\n            dispatch(clearCart());\r\n            dispatch(clearWishlist());\r\n            localStorage.clear();\r\n        } \r\n    } catch(err) {\r\n        console.log(err);\r\n        dispatch(logoutFailure());\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,SAAS,EAAEC,SAAS,QAAQ,aAAa;AAClD,SACIC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,WAAW,EACXC,aAAa,EACbC,aAAa,QACV,aAAa;AACpB,SAASC,aAAa,EAAEC,aAAa,QAAQ,iBAAiB;AAC9D,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5CA,QAAQ,CAACV,iBAAiB,EAAE,CAAC;EAC7B,IAAI;IACA,MAAMW,GAAG,GAAG,MAAMjB,WAAW,CAACkB,GAAG,CAAC,gBAAgB,EAAE;MAChDC,eAAe,EAAE;IACrB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACK,IAAI,CAAC;IACrB,OAAOL,GAAG,CAACK,IAAI;EACnB,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACR,mBAAmB,EAAE,CAAC;EACnC;AACJ,CAAC;AAED,OAAO,MAAMgB,KAAK,GAAG,OAAOR,QAAQ,EAAES,IAAI,KAAK;EAC3CT,QAAQ,CAACZ,UAAU,EAAE,CAAC;EACtB,IAAI;IACA,MAAMa,GAAG,GAAG,MAAMlB,aAAa,CAAC2B,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACzDL,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACK,IAAI,CAAC;IACrBN,QAAQ,CAACX,YAAY,CAACY,GAAG,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAMC,GAAG,EAAE;IACTP,QAAQ,CAACb,YAAY,EAAE,CAAC;IACxBW,KAAK,CAACa,KAAK,CAACJ,GAAG,CAACK,QAAQ,CAACN,IAAI,CAACK,KAAK,CAAC;EACxC;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,OAAOb,QAAQ,EAAES,IAAI,KAAK;EAC5CT,QAAQ,CAACP,WAAW,EAAE,CAAC;EACvB,MAAM;IAAEqB,GAAG;IAAEC;EAAe,CAAC,GAAGN,IAAI;EACpC,IAAI;IACA,MAAMR,GAAG,GAAG,MAAMjB,WAAW,CAAC0B,IAAI,CAAC,mBAAmB,EAAE;MAACM,MAAM,EAAEF,GAAG;MAAEC;IAAc,CAAC,CAAC;IACtF,IAAId,GAAG,EAAE;MACLD,QAAQ,CAACN,aAAa,EAAE,CAAC;MACzBM,QAAQ,CAACf,SAAS,EAAE,CAAC;MACrBe,QAAQ,CAACJ,aAAa,EAAE,CAAC;MACzBqB,YAAY,CAACC,KAAK,EAAE;IACxB;EACJ,CAAC,CAAC,OAAMX,GAAG,EAAE;IACTH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAChBP,QAAQ,CAACL,aAAa,EAAE,CAAC;EAC7B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}