{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { userRequest } from \"../requestMethods\";\nexport const fetchWishlist = createAsyncThunk('wishlist/fetchWishlist', async userId => {\n  const res = await userRequest.get(`wishlists/find/${userId}`);\n  return res.data;\n});\nconst wishlistSlice = createSlice({\n  name: 'wishlist',\n  initialState: {\n    products: [],\n    quantity: 0,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      var _state$products;\n      if (((_state$products = state.products) === null || _state$products === void 0 ? void 0 : _state$products.length) > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id) {\n            state.products[i].quantity += action.payload.quantity;\n            return;\n          }\n        }\n        state.quantity += 1;\n        state.products.push(action.payload);\n      } else {\n        state.quantity += 1;\n        state.products.push(action.payload);\n      }\n    },\n    deleteProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id) {\n            state.products.splice(i, 1);\n            state.quantity -= 1;\n            return;\n          }\n        }\n      }\n    },\n    clearWishlist: state => {\n      state.products = [];\n      state.quantity = 0;\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProduct,\n  clearWishlist\n} = wishlistSlice.actions;\nexport default wishlistSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userRequest","fetchWishlist","userId","res","get","data","wishlistSlice","name","initialState","products","quantity","status","error","reducers","addProduct","state","action","length","i","payload","_id","push","deleteProduct","splice","clearWishlist","totalPrice","actions","reducer"],"sources":["D:/Work/vinogradnik/client/src/redux/wishlistRedux.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { userRequest } from \"../requestMethods\";\r\n\r\n\r\nexport const fetchWishlist = createAsyncThunk('wishlist/fetchWishlist', async (userId) => {\r\n    const res = await userRequest.get(`wishlists/find/${userId}`);\r\n    return res.data;\r\n});\r\n\r\nconst wishlistSlice = createSlice({\r\n    name: 'wishlist',\r\n    initialState: {\r\n        products: [],\r\n        quantity: 0,\r\n        status: 'idle',\r\n        error: null  \r\n    },\r\n    reducers: {\r\n        addProduct: (state, action) => {\r\n            if (state.products?.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id) {\r\n                        state.products[i].quantity += action.payload.quantity;\r\n                        return\r\n                    } \r\n                }\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);              \r\n            } else {\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);\r\n            }\r\n        },\r\n        deleteProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id) {\r\n                        state.products.splice(i, 1);\r\n                        state.quantity -= 1;    \r\n                        return\r\n                    } \r\n                }        \r\n            }\r\n        },\r\n        clearWishlist: (state) => {\r\n            state.products = [];\r\n            state.quantity = 0;\r\n            state.totalPrice = 0;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addProduct, deleteProduct, clearWishlist } = wishlistSlice.actions;\r\nexport default wishlistSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,mBAAmB;AAG/C,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,MAAOG,MAAM,IAAK;EACtF,MAAMC,GAAG,GAAG,MAAMH,WAAW,CAACI,GAAG,CAAE,kBAAiBF,MAAO,EAAC,CAAC;EAC7D,OAAOC,GAAG,CAACE,IAAI;AACnB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAAA;MAC3B,IAAI,oBAAAD,KAAK,CAACN,QAAQ,oDAAd,gBAAgBQ,MAAM,IAAG,CAAC,EAAE;QAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACN,QAAQ,CAACQ,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC5C,IAAIH,KAAK,CAACN,QAAQ,CAACS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAKF,MAAM,CAACG,OAAO,CAACC,GAAG,EAAE;YACjDL,KAAK,CAACN,QAAQ,CAACS,CAAC,CAAC,CAACR,QAAQ,IAAIM,MAAM,CAACG,OAAO,CAACT,QAAQ;YACrD;UACJ;QACJ;QACAK,KAAK,CAACL,QAAQ,IAAI,CAAC;QACnBK,KAAK,CAACN,QAAQ,CAACY,IAAI,CAACL,MAAM,CAACG,OAAO,CAAC;MACvC,CAAC,MAAM;QACHJ,KAAK,CAACL,QAAQ,IAAI,CAAC;QACnBK,KAAK,CAACN,QAAQ,CAACY,IAAI,CAACL,MAAM,CAACG,OAAO,CAAC;MACvC;IACJ,CAAC;IACDG,aAAa,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9B,IAAID,KAAK,CAACN,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAE;QAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACN,QAAQ,CAACQ,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC5C,IAAIH,KAAK,CAACN,QAAQ,CAACS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAKF,MAAM,CAACG,OAAO,CAACC,GAAG,EAAE;YACjDL,KAAK,CAACN,QAAQ,CAACc,MAAM,CAACL,CAAC,EAAE,CAAC,CAAC;YAC3BH,KAAK,CAACL,QAAQ,IAAI,CAAC;YACnB;UACJ;QACJ;MACJ;IACJ,CAAC;IACDc,aAAa,EAAGT,KAAK,IAAK;MACtBA,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,QAAQ,GAAG,CAAC;MAClBK,KAAK,CAACU,UAAU,GAAG,CAAC;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,UAAU;EAAEQ,aAAa;EAAEE;AAAc,CAAC,GAAGlB,aAAa,CAACoB,OAAO;AACjF,eAAepB,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}