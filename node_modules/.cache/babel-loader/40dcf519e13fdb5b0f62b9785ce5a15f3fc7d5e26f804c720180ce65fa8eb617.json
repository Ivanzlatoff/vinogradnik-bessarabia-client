{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport cartReducer from './cartRedux';\nimport userReducer from './userRedux';\nimport wishlistReducer from './wishlistRedux';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","cartReducer","userReducer","wishlistReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","wishlist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/Work/vinogradnik/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport cartReducer from './cartRedux';\r\nimport userReducer from './userRedux';\r\nimport wishlistReducer from './wishlistRedux';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer, wishlist: wishlistReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n});\r\n\r\nexport let persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,eAAe,MAAM,iBAAiB;AAC7C,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVH;AACF,CAAC;AAED,MAAMI,WAAW,GAAGhB,eAAe,CAAC;EAAEiB,IAAI,EAAEf,WAAW;EAAEgB,IAAI,EAAEjB,WAAW;EAAEkB,QAAQ,EAAEhB;AAAgB,CAAC,CAAC;AAExG,MAAMiB,gBAAgB,GAAGf,cAAc,CAACQ,aAAa,EAAEG,WAAW,CAAC;AAEnE,OAAO,MAAMK,KAAK,GAAGtB,cAAc,CAAC;EAChCuB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAACpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACtE;EACJ,CAAC;AACT,CAAC,CAAC;AAEF,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACiB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}