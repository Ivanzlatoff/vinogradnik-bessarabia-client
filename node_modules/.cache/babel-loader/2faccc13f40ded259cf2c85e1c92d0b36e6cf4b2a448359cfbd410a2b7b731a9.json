{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\vinogradnik\\\\client\\\\src\\\\components\\\\Newsletter.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport validator from \"validator\";\nimport SendIcon from '@mui/icons-material/Send';\nimport styled from 'styled-components';\nimport { mobile } from '../responsive';\nimport { publicRequest } from '../requestMethods';\nimport { toast } from 'react-hot-toast';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newsletter = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const {\n    t\n  } = useTranslation([\"newsletter\"]);\n  const validateEmail = e => {\n    const email = e.target.value;\n    if (validator.isEmail(email)) {\n      setMessage(\"Email looks good!\");\n      setEmailAddress(email);\n    } else {\n      setMessage(\"Please, enter valid Email!\");\n    }\n  };\n  const handleClick = async () => {\n    if (!emailAddress) return;\n    try {\n      const res = await publicRequest.post(\"/newsletter\", {\n        email: emailAddress\n      });\n      console.log(res);\n      toast.success(`${emailAddress} successfully added to our newsletter, thank you!`);\n      setEmailAddress('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: t(\"newsletter\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      className: \"desc\",\n      children: t(\"desc\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"inputContainer\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: t(\"email_placeholder\"),\n        name: \"email\",\n        onChange: e => validateEmail(e),\n        value: emailAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClick(),\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Newsletter, \"OwdY1U3PsQYsG15oxMMPeZRGGnc=\", false, function () {\n  return [useTranslation];\n});\n_c = Newsletter;\nexport default Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["useState","validator","SendIcon","styled","mobile","publicRequest","toast","useTranslation","Newsletter","message","setMessage","emailAddress","setEmailAddress","t","validateEmail","e","email","target","value","isEmail","handleClick","res","post","console","log","success","err"],"sources":["D:/Work/vinogradnik/client/src/components/Newsletter.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport validator from \"validator\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport styled from 'styled-components';\r\nimport { mobile } from '../responsive';\r\nimport { publicRequest } from '../requestMethods';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst Newsletter = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [emailAddress, setEmailAddress] = useState(\"\");\r\n  const { t } = useTranslation([\"newsletter\"])\r\n\r\n  const validateEmail = (e) => {\r\n    const email = e.target.value;\r\n\r\n    if (validator.isEmail(email)) {\r\n      setMessage(\"Email looks good!\");\r\n      setEmailAddress(email)\r\n    } else {\r\n      setMessage(\"Please, enter valid Email!\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!emailAddress) return;\r\n    try {\r\n        const res = await publicRequest.post(\"/newsletter\", {email: emailAddress})\r\n        console.log(res)\r\n        toast.success(`${emailAddress} successfully added to our newsletter, thank you!`);\r\n        setEmailAddress('');\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Title>{t(\"newsletter\")}</Title>\r\n      <Description className='desc'>{t(\"desc\")}</Description>\r\n      <inputContainer>\r\n        <Input \r\n          placeholder={t(\"email_placeholder\")}\r\n          name='email'\r\n          onChange={(e) => validateEmail(e)}\r\n          value={emailAddress}\r\n        />\r\n        <Button onClick={() => handleClick()}>\r\n            <SendIcon />\r\n        </Button>\r\n      </inputContainer>\r\n      <h4>\r\n        {message}\r\n      </h4>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Newsletter\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,cAAc,QAAQ,eAAe;AAAC;AAG/C,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEa;EAAE,CAAC,GAAGN,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC;EAE5C,MAAMO,aAAa,GAAIC,CAAC,IAAK;IAC3B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAE5B,IAAIjB,SAAS,CAACkB,OAAO,CAACH,KAAK,CAAC,EAAE;MAC5BN,UAAU,CAAC,mBAAmB,CAAC;MAC/BE,eAAe,CAACI,KAAK,CAAC;IACxB,CAAC,MAAM;MACLN,UAAU,CAAC,4BAA4B,CAAC;IAC1C;EACF,CAAC;EAED,MAAMU,WAAW,GAAG,YAAY;IAC9B,IAAI,CAACT,YAAY,EAAE;IACnB,IAAI;MACA,MAAMU,GAAG,GAAG,MAAMhB,aAAa,CAACiB,IAAI,CAAC,aAAa,EAAE;QAACN,KAAK,EAAEL;MAAY,CAAC,CAAC;MAC1EY,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBf,KAAK,CAACmB,OAAO,CAAE,GAAEd,YAAa,mDAAkD,CAAC;MACjFC,eAAe,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,OAAMc,GAAG,EAAE;MACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB;EACF,CAAC;EACD,oBACE,QAAC,SAAS;IAAA,wBACR,QAAC,KAAK;MAAA,UAAEb,CAAC,CAAC,YAAY;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAChC,QAAC,WAAW;MAAC,SAAS,EAAC,MAAM;MAAA,UAAEA,CAAC,CAAC,MAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAe,eACvD;MAAA,wBACE,QAAC,KAAK;QACJ,WAAW,EAAEA,CAAC,CAAC,mBAAmB,CAAE;QACpC,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAGE,CAAC,IAAKD,aAAa,CAACC,CAAC,CAAE;QAClC,KAAK,EAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QACpB,eACF,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMS,WAAW,EAAG;QAAA,uBACjC,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA,QACM,eACjB;MAAA,UACGX;IAAO;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEhB,CAAC;AAAA,GA/CKD,UAAU;EAAA,QAGAD,cAAc;AAAA;AAAA,KAHxBC,UAAU;AAiDhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}