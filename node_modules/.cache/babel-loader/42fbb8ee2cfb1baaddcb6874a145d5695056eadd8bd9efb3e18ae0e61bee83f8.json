{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { publicRequest, userRequest } from \"../requestMethods\";\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async userId => {\n  const res = await userRequest.get(`carts/find/${userId}`);\n  console.log(\"res => \", res.data);\n  return res.data;\n});\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    products: [],\n    quantity: 0,\n    totalPrice: 0,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      var _state$products;\n      if (((_state$products = state.products) === null || _state$products === void 0 ? void 0 : _state$products.length) > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            state.products[i].quantity += action.payload.quantity;\n            state.totalPrice += action.payload.price * action.payload.quantity;\n            return;\n          }\n        }\n        state.quantity += 1;\n        state.products.push(action.payload);\n        state.totalPrice += action.payload.price * action.payload.quantity;\n      } else {\n        state.quantity += 1;\n        state.products.push(action.payload);\n        state.totalPrice += action.payload.price * action.payload.quantity;\n      }\n    },\n    increaseProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            if (state.products[i].quantity < 10000) {\n              state.products[i].quantity += 100;\n              state.totalPrice += action.payload.price * 100;\n            }\n            return;\n          }\n        }\n      }\n    },\n    decreaseProduct: (state, action) => {\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            if (state.products[i].quantity > 100) {\n              state.products[i].quantity -= 100;\n              state.totalPrice -= action.payload.price * 100;\n            }\n            return;\n          }\n        }\n      }\n    },\n    deleteProduct: (state, action) => {\n      console.log(state);\n      if (state.products.length > 0) {\n        for (let i = 0; i < state.products.length; i++) {\n          if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\n            state.totalPrice -= state.products[i].price * state.products[i].quantity;\n            state.products.splice(i, 1);\n            state.quantity -= 1;\n            return;\n          }\n        }\n      }\n    },\n    clearCart: state => {\n      state.products = [];\n      state.quantity = 0;\n      state.totalPrice = 0;\n      state.status = 'idle';\n      state.error = null;\n    },\n    extraReducers(builder) {\n      builder.addCase(fetchCart.pending, (state, action) => {\n        state.cart.status = 'loading';\n      }).addCase(fetchCart.fulfilled, (state, action) => {\n        console.log(action);\n        state.cart.status = 'succeded';\n        console.log(\"action => \", action);\n        state.cart.products = state.cart.products.concat(action.payload);\n        state.cart.quantity = state.cart.products.length();\n        state.cart.totalPrice = state.cart.products.reduce((a, b) => a['price'] * a['quantity'] + b['price'] * b['quantity'], 0);\n      }).addCase(fetchCart.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n    }\n  }\n});\nexport const {\n  addProduct,\n  increaseProduct,\n  decreaseProduct,\n  deleteProduct,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","publicRequest","userRequest","fetchCart","userId","res","get","console","log","data","cartSlice","name","initialState","products","quantity","totalPrice","status","error","reducers","addProduct","state","action","length","i","payload","_id","color","price","push","increaseProduct","decreaseProduct","deleteProduct","splice","clearCart","extraReducers","builder","addCase","pending","cart","fulfilled","concat","reduce","a","b","rejected","message","actions","reducer"],"sources":["D:/Work/vinogradnik/client/src/redux/cartRedux.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\n\r\n\r\nexport const fetchCart = createAsyncThunk('cart/fetchCart', async (userId) => {\r\n    const res = await userRequest.get(`carts/find/${userId}`);\r\n    console.log(\"res => \", res.data)\r\n    return res.data;\r\n});\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        products: [],\r\n        quantity: 0,\r\n        totalPrice: 0,\r\n        status: 'idle',\r\n        error: null     \r\n    },\r\n    reducers: {\r\n        addProduct: (state, action) => {\r\n            if (state.products?.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        state.products[i].quantity += action.payload.quantity;\r\n                        state.totalPrice += action.payload.price * action.payload.quantity;\r\n                        return\r\n                    } \r\n                }\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);\r\n                state.totalPrice += action.payload.price * action.payload.quantity;               \r\n            } else {\r\n                state.quantity += 1;\r\n                state.products.push(action.payload);\r\n                state.totalPrice += action.payload.price * action.payload.quantity;\r\n            }\r\n        },\r\n        increaseProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        if (state.products[i].quantity < 10000) {\r\n                            state.products[i].quantity += 100;\r\n                            state.totalPrice += action.payload.price * 100;\r\n                        }\r\n                        return                        \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        decreaseProduct: (state, action) => {\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        if (state.products[i].quantity > 100) {\r\n                            state.products[i].quantity -= 100;\r\n                            state.totalPrice -= action.payload.price * 100;\r\n                        }\r\n                        return                        \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        deleteProduct: (state, action) => {\r\n            console.log(state)\r\n            if (state.products.length > 0) {\r\n                for (let i = 0; i < state.products.length; i++) {\r\n                    if (state.products[i]['_id'] === action.payload._id && state.products[i]['color'] === action.payload.color) {\r\n                        state.totalPrice -= state.products[i].price*state.products[i].quantity;\r\n                        state.products.splice(i, 1);\r\n                        state.quantity -= 1;    \r\n                        return\r\n                    } \r\n                }        \r\n            }\r\n        },\r\n        clearCart: (state) => {\r\n            state.products = [];\r\n            state.quantity = 0;\r\n            state.totalPrice = 0;\r\n            state.status = 'idle';\r\n            state.error = null;\r\n        },\r\n        extraReducers(builder) {\r\n            builder\r\n                .addCase(fetchCart.pending, (state, action) => {\r\n                    state.cart.status = 'loading';\r\n                })\r\n                .addCase(fetchCart.fulfilled, (state, action) => {\r\n                    console.log(action)\r\n                    state.cart.status = 'succeded';\r\n                    console.log(\"action => \", action)\r\n                    state.cart.products = state.cart.products.concat(action.payload);\r\n                    state.cart.quantity = state.cart.products.length();\r\n                    state.cart.totalPrice = state.cart.products.reduce((a, b) => a['price']*a['quantity'] + b['price']*b['quantity'], 0)\r\n                })\r\n                .addCase(fetchCart.rejected, (state, action) => {\r\n                    state.status = 'failed';\r\n                    state.error = action.error.message;\r\n                })\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addProduct, increaseProduct, decreaseProduct, deleteProduct, clearCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}